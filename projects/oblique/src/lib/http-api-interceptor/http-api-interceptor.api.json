{
  "$schema": "../../../schema.json",
  "api": [
    {
      "name": "ObHttpApiInterceptorConfig",
      "usage": "Should be injected, typically in the AppModule, to customize the values of its properties in order to provide alternate default values for the <code>HttpApiInterceptor</code>.",
      "type": "injectable(config)",
      "since": "3.0.0",
      "variables": [
        {
          "name": "api.url",
          "text": "Matching URLs will be treated as API calls and thus affected by this interceptor.",
          "type": "string",
          "default": "",
          "since": "3.0.0"
        },
        {
          "name": "api.spinner",
          "text": "Defines if a spinner should be activated whenever an API call starts.",
          "type": "boolean",
          "default": true,
          "since": "3.0.0"
        },
        {
          "name": "api.notification.active",
          "text": "Defines if a notification should be displayed in case of API error response.",
          "type": "boolean",
          "default": true,
          "since": "3.0.0"
        },
        {
          "name": "api.notification.severity",
          "text": "Defines the notification's severity.",
          "values": ["error", "warning", "info", "success"],
          "type": "ObENotificationType",
          "default": "<code>error</code> (inferred from <code>ObENotificationType.ERROR</code>)",
          "since": "3.0.0"
        },
        {
          "name": "api.notification.title",
          "text": "Defines the notification's text.",
          "type": "string",
          "default": "error.statusText",
          "since": "3.0.0"
        },
        {
          "name": "api.notification.text",
          "text": "Defines the notification's title.",
          "type": "string",
          "default": "i18n.oblique.http.error.status.<error.status>",
          "since": "3.0.0"
        },
        {
          "name": "timeout",
          "text": "The timeout to wait before considering an API call as failed. A notification will be issued to warn the user about request timeout, but the request itself won't be cancelled.",
          "type": "number",
          "default": 15000,
          "since": "3.0.0"
        }
      ]
    },
    {
      "name": "ObHttpApiInterceptorEvents",
      "type": "injectable(event)",
      "since": "3.0.0",
      "variables": [
        {
          "name": "requestIntercepted",
          "text": "This observable emits events before the request is sent to the server and can be used to tweak the behavior of the interceptor.",
          "type": "Observable<ObIHttpApiRequest>",
          "since": "3.0.0"
        },
        {
          "name": "sessionExpired",
          "text": "This observable emits when the server respond with a 401 error, which is typically the case with an expired EIAM session.",
          "type": "Observable<void>",
          "since": "3.0.0"
        }
      ],
      "methods": [
        {
          "name": "deactivateSpinnerOnNextAPICalls",
          "text": "No spinner will be activated on the next <code>number</code> API calls.",
          "arguments": ["number = 1"],
          "since": "4.1.0"
        },
        {
          "name": "deactivateNotificationOnNextAPICalls",
          "text": "No notification will be activated on the next <code>number</code> API calls.",
          "arguments": ["number = 1"],
          "since": "4.1.0"
        },
        {
          "name": "deactivateOnNextAPICalls",
          "text": "No spinner nor notification will be activated on the next <code>number</code> API calls.",
          "arguments": ["number = 1"],
          "since": "4.1.0"
        }
      ]
    },
    {
      "name": "ObIHttpApiRequest",
      "type": "interface",
      "usage": "The behavior of the Http interceptor",
      "since": "3.0.0",
      "variables": [
        {
          "name": "notification.active",
          "text": "Is the notification active",
          "type": "boolean",
          "since": "3.0.0"
        },
        {
          "name": "notification.severity",
          "text": "The severity of notification",
          "type": "ObENotificationType",
          "values": [
            "ObENotificationType.INFO",
            "ObENotificationType.SUCCESS",
            "ObENotificationType.WARNING",
            "ObENotificationType.ERROR"
          ],
          "since": "3.0.0"
        },
        {
          "name": "notification.title",
          "text": "Title text of the notification",
          "type": "string",
          "since": "3.0.0"
        },
        {
          "name": "notification.text",
          "text": "Message text of the notification",
          "type": "string",
          "since": "3.0.0"
        },
        {
          "name": "notification.sticky",
          "text": "Is the notification sticky (does not automatically close)",
          "type": "boolean",
          "since": "3.0.0"
        },
        {
          "name": "spinner",
          "text": "Is spinner active",
          "type": "boolean",
          "since": "3.0.0"
        }
      ]
    }
  ]
}
