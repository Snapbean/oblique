@import "../../styles/scss/core/variables";
@import "../../styles/scss/core/mixins/layout";

.search-results-list {
	top: $header-height-md;
	left: 0;
	right: 0;
	height: 0;
	background-color: $white;
	overflow: hidden;
	transition: height $duration-default;

	.highlight {
		font-weight: bold;
		text-decoration: underline;
	}

	small {
		color: $gray-dark;
		display: block;
	}
}

.control-item .search-results-list {
	position: fixed;
}

:hover > .ob-search-box-results .search-results-list.hasResults,
:focus-within > .ob-search-box-results .search-results-list.hasResults {
	height: auto;
}

.noResult {
	padding: 8px $spacing-default;

	&:not(:only-child) {
		display: none;
	}
}

@include media-breakpoint-up(lg) {
	.search-results-list {
		display: block;
		position: absolute;
		top: auto;
		left: -$spacing-default;
		min-width: 300px;
		max-height: 0;
		padding: 0 $spacing-default;
		margin-top: 1.65em;	// icon height
		background-color: $white;
		box-shadow: 0 0 12px rgba(0, 0, 0, 0.1);
		transition-property: max-height, padding-top, padding-bottom;
		transition-duration: $duration-default;
		z-index: 1;

		.control-item & {
			position: absolute;
		}

		&::before,
		&::after {
			content: '';
			display: block;
			position: absolute;
			border-style: solid;
			transition: right $duration-default, left $duration-default;
		}

		$arrow-size: 16px;
		$arrow-lg-size: 14px;
		&::before {
			left: 10px;
			top: -$arrow-size;
			border-width: 0 $arrow-size $arrow-size;
			border-color: $gray-light transparent;
		}

		&::after {
			left: 12px;
			top: -$arrow-lg-size;
			border-width: 0 $arrow-lg-size $arrow-lg-size;
			border-color: white transparent;
		}
	}

	:hover > .ob-search-box-results .search-results-list.hasResults,
	:focus-within > .ob-search-box-results .search-results-list.hasResults {
		max-height: calc(100vh - 200px);
		padding: $spacing-default;
		overflow: visible;
		border: 1px solid $gray-light;
	}
}
